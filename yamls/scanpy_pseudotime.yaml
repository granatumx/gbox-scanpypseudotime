id: ScanpyPseudotime-{VER}
meta:
  title: Pseudotime construction {VER}
  subtitle: Diffusion Pseudotime analysis (backed by Scanpy)
  citations:
    - bibtex: |
        @article{wolf2018scanpy,
          title={SCANPY: Large-scale single-cell gene expression data analysis},
          author={Wolf, F Alexander and Angerer, Philipp and Theis, Fabian J},
          journal={Genome biology},
          volume={19},
          number={1},
          pages={15},
          year={2018},
          publisher={BioMed Central}
        }
    - bibtex: |
        @article{haghverdi2016diffusion,
          title={Diffusion pseudotime robustly reconstructs lineage branching},
          author={Haghverdi, Laleh and Buettner, Maren and Wolf, F Alexander and Buettner, Florian and Theis, Fabian J},
          journal={Nature methods},
          volume={13},
          number={10},
          pages={845},
          year={2016},
          publisher={Nature Publishing Group}
        }
  description: >
    The temporal order of differentiating cells is intrinsically encoded in
    their single-cell expression profiles. We describe an efficient way to
    robustly estimate this order according to diffusion pseudotime (DPT), which
    measures transitions between cells using diffusion-like random walks. Our
    DPT software implementations make it possible to reconstruct the
    developmental progression of cells and identify transient or metastable
    states, branching decisions and differentiation endpoints.

    DPT is the abbreviation of “diffusion pseudotime”, where “d” represents “diffusion”. This method was proposed in the publication “Diffusion pseudotime robustly reconstructs lineage branching” (PMID 27571553). It measures transitions between cells using diffusion-like random walks, and makes it possible to reconstruct the developmental progression of cells and identify transient or metastable states, branching decisions and differentiation endpoints.

    As to the meaning of the output plots, their DC1 and DC2 axes indicate the value of the first 2 diffusion components. They are the top 2 largest eigenvalues of the transition matrix, which approximates the dynamic transitions of cells through stages of the differentiation process. This transition matrix is computed using a nearest neighbor graph whose edge weights have a Gaussian distribution with respect to Euclidean distance in gene expression space and transition probabilities of this matrix correspond to the edge weights. DC1 and DC2 are used here for visualizing the single cells in the 2-dimensional plots. 

    The difference between the 2 output plots is about their color keys. The first one has a continuous color key, while the second one has a discrete color key, both of which are used to show the differentiation stages of the cells, or time points of the random walk process. If a cell in the first plot has a color corresponding to a small value in the continuous color key, it means this cell differentiates early, while one with a color corresponding to a large value in the color key means it differentiates late. As to the second plot, the continuous time value is discretized and the cells are correspondingly divided into different groups, according to their discrete color values. Hence, cells in the group with a small color value constitute a group differentiated early, while other groups differentiate late.

endpoints:
  backend:
    cmd: python ./scanpy_pseudotime.py
    type: docker
    image: {GBOX}
frontend:
  args:
    - max: 100
      min: 1
      type: number
      label: Number of neighbors to calculate
      default: 20
      injectInto: nNeighbors
    - type: select
      label: Method for computing connectivities
      choices:
        - label: Gauss kernel
          value: gauss
          description: 'Gauss kernel following [Coifman05] with adaptive width [Haghverdi16]'
        - label: Uniform Manifold Approximation and Projection (UMAP)
          value: umap
          description: >-
            McInnes & Healy (2018), UMAP: Uniform Manifold Approximation and
            Projection for Dimension Reduction
      default: gauss
      injectInto: neighborMethod
  exports:
    - kind: sampleMeta
      extractFrom: dpt_order
    - kind: sampleMeta
      extractFrom: dpt_groups
  imports:
    - kind: assay
      label: The input assay to use
      injectInto: assay
